
 /*					Código realizado durante el trabajo de tesis
 *	Arquitectura de Software Flexible y Genérica para Métodos del Tipo Newton
 *
 *										por 
 *			   				   Ricardo Serrato Barrera
 *
 *								     Asesores:
 *			  			     Dr. Gustavo Rodríguez Gómez
 *			 		         Dr. Saúl Pomares Hernández
 *			
 *			     				 1ro de diciembre 2011
 *
 *						Programador: Ricardo Serrato Barrera
 * 	
 */
package vistas;

import fabricaabstracta.Instancia;
import fabricaabstracta.Modelo;
import fabricaabstracta.Observador;
import funciones.FbFunciones;

import java.text.DecimalFormat;
import java.text.NumberFormat;
import java.util.ArrayList;
import javax.swing.JComboBox;

import criteriosdeparo.FbCriteriosParo;


import problemasnolineales.FbProblemaNoLineal;

import lineasdebusqueda.FbLineasBusqueda;

import derivadas.FbDerivadasPrimerOrden;
import derivadas.FbDerivadasSegundoOrden;

import algebralineal.FbAlgebraLineal;
import algebralineal.FbNormas;

import newtonsconcretos.FbTiposNewton;



/**
 * Esta clase es una vista de la arquitectura Newton. Vista recibe los cambios en la
 * arquitectura por medio de la clase Observador. Las operaciones que la vista le indica
 * al modelo son tratadas con la clase Controlador
 *
 *
 * @author Ricardo
 * @see Modelo, ModeloNewton, Vista, InstanciadorNewton, Observador, Controlador
 */

@SuppressWarnings("serial")
public class Vista extends javax.swing.JFrame implements Observador{

	private Grafica graficaIteraciones;
	private Grafica graficaNumEval;
	private Grafica graficaTiempoEjecucion;

    private Modelo modelo;
    private Controlador controlador;


    ArrayList<JComboBox> combos;

    /** Creates new form Vista */
    public Vista(ModeloNewton m) {

        modelo=m;
        controlador=new Controlador(m,this);

        graficaIteraciones=new Grafica1("Funcion",controlador,"Iteración","log ||F||");


        graficaNumEval=new Grafica2("Funcion",controlador,"Número de evaluaciones de F","log ||F||");


        graficaTiempoEjecucion=new Grafica3("Funcion",controlador,"Tiempo ejecución (milisegundos)","log ||F||");


        initComponents();

        combos= new ArrayList<JComboBox>();
        combos.add(ComboAlgebraLineal);
        combos.add(ComboDerivadaPrimerOrden);
        combos.add(ComboFunciones);
        combos.add(ComboProblemaNoLineal);
        combos.add(ComboTiposNewton);
        combos.add(ComboLineas);
        combos.add(ComboDerivadaSegundoOrden);
        combos.add(comboCriterioDeParo);
        combos.add(comboNormaFlexible);

        contenedorPaneles.addTab("Gráfica 1",graficaIteraciones.getChartPanel());
        contenedorPaneles.addTab("Gráfica 2",graficaNumEval.getChartPanel());
        contenedorPaneles.addTab("Gráfica 3",graficaTiempoEjecucion.getChartPanel());

        pack();

    }

    public void setControlador(Controlador controlador) {
        this.controlador = controlador;
    }

    public void setModelo(Modelo modelo) {
        this.modelo = modelo;
    }

     public Controlador getControlador() {
        return controlador;
    }

    public Modelo getModelo() {
        return modelo;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */

    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        ComboTiposNewton = new javax.swing.JComboBox();
        ComboProblemaNoLineal = new javax.swing.JComboBox();
        ComboLineas = new javax.swing.JComboBox();
        ComboFunciones = new javax.swing.JComboBox();
        ComboDerivadaPrimerOrden = new javax.swing.JComboBox();
        ComboAlgebraLineal = new javax.swing.JComboBox();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        ComboDerivadaSegundoOrden = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        comboNormaFlexible = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        comboCriterioDeParo = new javax.swing.JComboBox();
        resolver = new javax.swing.JButton();
        contenedorPaneles = new javax.swing.JTabbedPane();
        jScrollPane1 = new javax.swing.JScrollPane();
        AreaDatos = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jButton1.setText("Instanciar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Iterar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setText("Métodos tipo Newton");

        jLabel2.setText("Tipo Newton");

        jLabel3.setText("Función");

        jLabel4.setText("Primera Derivada");

        jLabel5.setText("Problema");

        jLabel6.setText("Alg. Lineal");

        jLabel7.setText("Línea");

        jLabel8.setText("SegundaDerivada");

        jLabel9.setText("Norma Flexible");

        comboNormaFlexible.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNormaFlexibleActionPerformed(evt);
            }
        });

        jLabel10.setText("Criterio de paro");

        resolver.setText("resolver");
        resolver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resolverActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(76, Short.MAX_VALUE))
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 291, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboTiposNewton, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboFunciones, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboDerivadaPrimerOrden, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(206, 206, 206))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboDerivadaSegundoOrden, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                        .addGap(227, 227, 227))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboProblemaNoLineal, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(ComboAlgebraLineal, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addContainerGap(103, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(comboNormaFlexible, 0, 132, Short.MAX_VALUE)
                        .addGap(159, 159, 159))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addContainerGap(108, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboCriterioDeParo, javax.swing.GroupLayout.Alignment.LEADING, 0, 132, Short.MAX_VALUE)
                            .addComponent(ComboLineas, 0, 132, Short.MAX_VALUE))
                        .addGap(159, 159, 159))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(resolver))
                        .addGap(115, 115, 115))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboTiposNewton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboFunciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboDerivadaPrimerOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboDerivadaSegundoOrden, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(ComboProblemaNoLineal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboAlgebraLineal, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ComboLineas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboCriterioDeParo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(comboNormaFlexible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addComponent(jButton1))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton2)))
                        .addGap(29, 29, 29))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(resolver)
                        .addContainerGap())))
        );

        AreaDatos.setColumns(20);
        AreaDatos.setRows(5);
        jScrollPane1.setViewportView(AreaDatos);

        contenedorPaneles.addTab("tab1", jScrollPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 188, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(contenedorPaneles, javax.swing.GroupLayout.DEFAULT_SIZE, 466, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(contenedorPaneles, javax.swing.GroupLayout.DEFAULT_SIZE, 614, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        aceptar();

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        itera();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void comboNormaFlexibleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNormaFlexibleActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboNormaFlexibleActionPerformed

    private void resolverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resolverActionPerformed
        resolver();
    }//GEN-LAST:event_resolverActionPerformed



    public void notificar() {
        throw new UnsupportedOperationException("Not supported yet.");
    }



    public void aceptar()
    {

        Instancia i;

        for(JComboBox c:combos)
        {
            i=(Instancia)c.getItemAt(c.getSelectedIndex());
            controlador.setInstancia(i.getInstanciadorNewton(), i.getIdInstancia());
        }

        controlador.instanciar();



    }

    public void itera()
    {
        controlador.itera();
    }

    public void resolver()
    {
    	controlador.resolver();
    }

    /**
     * Despliega una cadena de caracteres en la pantalla
     * @param s
     */

    public void desplegarDatos(String s)
    {
        String t=AreaDatos.getText()+"\n"+s;
        AreaDatos.setText(t);
    }

    @Override
    public void instanciaAgregada(FbDerivadasPrimerOrden i, int idInstancia, String descripcion) {

        ComboDerivadaPrimerOrden.addItem(new Instancia(i,idInstancia,descripcion));
    }

    @Override
    public void instanciaAgregada(FbDerivadasSegundoOrden i, int idInstancia, String descripcion) {
       ComboDerivadaSegundoOrden.addItem(new Instancia(i,idInstancia,descripcion));
    }

    @Override
    public void instanciaAgregada(FbProblemaNoLineal i, int idInstancia, String descripcion) {

        ComboProblemaNoLineal.addItem(new Instancia(i,idInstancia,descripcion));
    }

    @Override
    public void instanciaAgregada(FbAlgebraLineal i, int idInstancia, String descripcion) {

        ComboAlgebraLineal.addItem(new Instancia(i,idInstancia,descripcion));
    }

    @Override
    public void instanciaAgregada(FbTiposNewton i, int idInstancia, String descripcion) {

        ComboTiposNewton.addItem(new Instancia(i,idInstancia,descripcion));

    }

    @Override
    public void instanciaAgregada(FbFunciones i, int idInstancia,
			String descripcion) {

            ComboFunciones.addItem(new Instancia(i,idInstancia,descripcion));

	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea AreaDatos;
    private javax.swing.JComboBox ComboAlgebraLineal;
    private javax.swing.JComboBox ComboDerivadaPrimerOrden;
    private javax.swing.JComboBox ComboDerivadaSegundoOrden;
    private javax.swing.JComboBox ComboFunciones;
    private javax.swing.JComboBox ComboLineas;
    private javax.swing.JComboBox ComboProblemaNoLineal;
    private javax.swing.JComboBox ComboTiposNewton;
    private javax.swing.JComboBox comboCriterioDeParo;
    private javax.swing.JComboBox comboNormaFlexible;
    private javax.swing.JTabbedPane contenedorPaneles;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton resolver;
    // End of variables declaration//GEN-END:variables

	@Override
	public void puntoAgregado(double puntoActual[][],double punto, int iteracion, int numEvaluaciones, long tiempoEjecucion, double normaDfx) {


		if(AreaDatos.getText().length()<=1)
		{
			String s="";
			for(int i=0;i<puntoActual.length;i++)
				s+="\t\t"+"X"+i;

			desplegarDatos("iteración"+"\t"+"llamadas F"+"\t"+"log10 ||F||"+s);
		}

		NumberFormat formato= new DecimalFormat("#00.000000000");
		String t="";
		String t2="";

		for(int i=0;i<puntoActual.length;i++)
			for(int j=0;j<puntoActual[0].length;j++){
				t+="\t\t"+formato.format(puntoActual[i][j]);
				t2+=formato.format(puntoActual[i][j])+",";
			}

		desplegarDatos(iteracion+"\t"+numEvaluaciones+"\t"+formato.format(Math.log10(punto))+t);

		System.out.println("["+t2+formato.format(punto)+"]");

	}

	public void setGraficaIteraciones(Grafica graficaIteraciones) {
		this.graficaIteraciones = graficaIteraciones;
	}

	public Grafica getgraficaIteraciones() {
		return graficaIteraciones;
	}

	@Override
	public void instanciaAgregada(FbLineasBusqueda i, int idInstancia,
			String descripcion) {

            ComboLineas.addItem(new Instancia(i,idInstancia,descripcion));
		// TODO Auto-generated method stub

	}

	public void setGraficaNumEval(Grafica graficaNumEval) {
		this.graficaNumEval = graficaNumEval;
	}

	public Grafica getGraficaNumEval() {
		return graficaNumEval;
	}

	public void setGraficaTiempoEjecucion(Grafica graficaTiempoEjecucion) {
		this.graficaTiempoEjecucion = graficaTiempoEjecucion;
	}

	public Grafica getGraficaTiempoEjecucion() {
		return graficaTiempoEjecucion;
	}

	@Override
	public void instanciaAgregada(FbNormas i, int idInstancia,
			String descripcion) {

         comboNormaFlexible.addItem(new Instancia(i,idInstancia,descripcion));

	}

	@Override
	public void instanciaAgregada(FbCriteriosParo fbCriteriosParo,
			int idInstancia, String descripcion) {
		 comboCriterioDeParo.addItem(new Instancia(fbCriteriosParo,idInstancia,descripcion));

	}




}
